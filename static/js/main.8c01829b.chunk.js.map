{"version":3,"sources":["menu.svg","ListView.js","NeighborhoodMap.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ListView","state","query","isHidden","_this2","this","_this$props","props","markers","onToggleInfoWindow","onFilterLocations","_this$state","react_default","a","createElement","className","type","src","menu","alt","onClick","setState","tabIndex","onSubmit","e","placeholder","onChange","target","value","filter","marker","isVisible","map","key","id","showInfo","title","Component","Map","withGoogleMap","react_google_maps_lib","defaultCenter","lat","lng","defaultZoom","position","animation","visible","onCloseClick","url","href","image","reviews","review","Fragment","rating","text","window","gm_authFailure","alert","NeighborhoodMap","loadingElement","containerElement","mapElement","role","aria-label","proxy","api","App","JSON","parse","stringify","markerData","willLoad","getBusiness","$","ajax","concat","headers","Authorization","getReviews","toggleInfoWindow","Object","toConsumableArray","_this","m","google","maps","Animation","BOUNCE","filterLocations","event","preventDefault","DROP","toLowerCase","includes","isScriptLoaded","_ref","isScriptLoadSucceed","document","addEventListener","keyCode","done","data","businesses","image_url","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","push","err","return","fail","xhr","textStatus","error","console","querySelectorAll","slice","length","element","src_ListView","src_NeighborhoodMap","scriptLoader","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","render","src_App_0","getElementById","URL","process","origin","fetch","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8c01829b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/menu.9ed676bf.svg\";","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport menu from './menu.svg';\r\n\r\nclass ListView extends Component {\r\n\t// Ensure props are the right variable type\r\n\tstatic propTypes = {\r\n\t\tmarkers: PropTypes.array.isRequired,\r\n\t\tonToggleInfoWindow: PropTypes.func.isRequired,\r\n\t\tonFilterLocations: PropTypes.func.isRequired\r\n\t};\r\n\r\n\tstate = {\r\n\t\t// Search query\r\n\t\tquery: '',\r\n\t\t// Is list view hidden?\r\n\t\tisHidden: true\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {markers, onToggleInfoWindow, onFilterLocations} = this.props;\r\n\t\tconst {query, isHidden} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={isHidden ? 'list-view hidden' : 'list-view'}>\r\n        <div className=\"list-side\">\r\n          <input className=\"list-toggle\" type=\"image\" src={menu}\r\n          \talt={isHidden ? 'Show list view' : 'Hide list view'}\r\n          \tonClick={() => this.setState({isHidden: !isHidden})}/>\r\n        </div>\r\n        <div className={isHidden ? \"list-main hidden\" : \"list-main\"}>\r\n          <h1 className=\"list-title\" tabIndex={0}>Neighborhood Map</h1>\r\n          <form className=\"list-form\" onSubmit={e => onFilterLocations(e, query)}>\r\n            <input className=\"list-search\" type=\"text\" placeholder=\"Search location\"\r\n              onChange={e => this.setState({query: e.target.value})}/>\r\n            <input className=\"list-submit\" type=\"submit\" value=\"Search\"/>\r\n          </form>\r\n          <ul className=\"list-locations\">\r\n            {markers.filter(marker => marker.isVisible).map(marker => (\r\n              <li key={marker.id}>\r\n                <button className={marker.showInfo ? 'list-button selected' : 'list-button'} type=\"button\"\r\n                  onClick={() => onToggleInfoWindow(marker)}>{marker.title}</button>\r\n                <hr/>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n\t}\r\n}\r\n\r\nexport default ListView;\r\n","import React, {Component} from 'react';\r\nimport {withGoogleMap, GoogleMap, Marker, InfoWindow} from 'react-google-maps';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Create Map component at the very top to render the entire map once\r\nconst Map = withGoogleMap(props => (\r\n  <GoogleMap defaultCenter={{lat: 40.441643, lng: -74.511790}} defaultZoom={12}>\r\n    {props.markers.map(marker => (\r\n      <Marker key={marker.id} title={marker.title} position={marker.position}\r\n        animation={marker.animation} visible={marker.isVisible}\r\n        onClick={() => props.onToggleInfoWindow(marker)}>\r\n        {marker.showInfo && <InfoWindow onCloseClick={() => props.onToggleInfoWindow(marker)}>\r\n          {marker.url ? (\r\n            <div key={marker.id} className=\"marker-window\">\r\n              <a className=\"marker-url\" href={marker.url}>{marker.title}</a>\r\n              <img className=\"marker-image\" src={marker.image} alt={marker.title} tabIndex={0}/>\r\n              <a className=\"marker-yelp\" href=\"https://www.yelp.com\">Yelp Reviews</a>\r\n              {marker.reviews ? (\r\n                marker.reviews.map(review => (\r\n                  // An alternative to creating another div child\r\n                  <React.Fragment key={review.id}>\r\n                    <h3 className=\"marker-rating\" tabIndex={0}>Rating: {review.rating}</h3>\r\n                    <p className=\"marker-review\" tabIndex={0}>{review.text}</p>\r\n                  </React.Fragment>\r\n                ))\r\n              ) : (\r\n                <h3 className=\"error-message\" tabIndex={0}>Error! Yelp reviews were unable to load.</h3>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <h3 className=\"error-message\" tabIndex={0}>\r\n              Error! Yelp could not find the location selected.\r\n            </h3>\r\n          )}\r\n        </InfoWindow>}\r\n      </Marker>\r\n    ))}\r\n  </GoogleMap>\r\n));\r\n\r\n// Alert when Google Maps authentication fails\r\nwindow.gm_authFailure = () => {\r\n  alert('Google Maps authentication failed.');\r\n};\r\n\r\nclass NeighborhoodMap extends Component {\r\n\t// Ensure props are the right variable type\r\n\tstatic propTypes = {\r\n\t\tmarkers: PropTypes.array.isRequired,\r\n\t\tonToggleInfoWindow: PropTypes.func.isRequired\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {markers, onToggleInfoWindow} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Map loadingElement={<div className=\"map-loading\"/>}\r\n\t\t\t\tcontainerElement={<div className=\"map-container\"/>}\r\n        mapElement={<div className=\"map\" role=\"application\" tabIndex={0}\r\n          aria-label=\"Map of neighborhood\"/>}\r\n        markers={markers} onToggleInfoWindow={onToggleInfoWindow}/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NeighborhoodMap;\r\n","/* global google */\nimport React, {Component} from 'react';\nimport scriptLoader from 'react-async-script-loader';\nimport $ from 'jquery';\nimport './App.css';\nimport ListView from './ListView';\nimport NeighborhoodMap from './NeighborhoodMap';\nimport markerData from './markers.json';\n\n// cors-anywhere bypasses the cross-origin resource sharing error\nconst proxy = 'https://cors-anywhere.herokuapp.com/';\n//const proxy = 'https://crossorigin.me/'; // Backup in case cors-anywhere is down\nconst api = 'Bearer 5gHT0N2H91kvYB8spnGJj0SD4Cub-O1qp35smS1pSrs0BFyGEayFl6W7AZWROPauJ2TU5gOcm2B1Otx' +\n  'adbNvCb0hcu_PFngOKC1f5a4QzgI5lR1gt2WeZoBa7zNeW3Yx';\n\nclass App extends Component {\n  state = {\n    // Initial markers\n    markers: JSON.parse(JSON.stringify(markerData)),\n    willLoad: true\n  };\n\n  componentWillReceiveProps({isScriptLoaded, isScriptLoadSucceed}) {\n    if (isScriptLoaded && !this.props.isScriptLoaded) {\n      // Perform asynchronous functions after Google Maps has loaded successfully\n      if (isScriptLoadSucceed) {\n        const markers = [...this.state.markers]; // Make a copy of markers\n        markers.map(marker => {\n          // Set common properties of all markers\n          marker.animation = google ? google.maps.Animation.DROP : null;\n          marker.showInfo = false;\n          marker.isVisible = true;\n          // Click focused marker when user hits enter\n          document.addEventListener('keyup', event =>\n            event.target.title === marker.title && event.keyCode === 13 && this.toggleInfoWindow(marker)\n          );\n          // Get image and reviews from Yelp\n          this.getBusiness(marker).done(data => {\n            marker.id = data.businesses[0].id;\n            marker.url = data.businesses[0].url;\n            marker.image = data.businesses[0].image_url;\n            this.getReviews(marker.id).done(data => {\n              marker.reviews = [];\n              for (const review of data.reviews) {\n                marker.reviews.push({\n                  id: review.id,\n                  rating: review.rating,\n                  text: review.text\n                });\n              }\n            }).fail((xhr, textStatus, error) => console.error(`Error: ${error}`));\n          }).fail((xhr, textStatus, error) => console.error(`Error: ${error}`));\n\n          return marker;\n        });\n\n        this.setState({markers}); // Set markers to the clone created above\n      } else\n        this.setState({willLoad: false});\n    }\n  }\n\n  getBusiness = marker =>\n    $.ajax({\n      // Marker title matches title on Yelp for better search results\n      url: proxy + `https://api.yelp.com/v3/businesses/search?latitude=${marker.position.lat}` +\n        `&longitude=${marker.position.lng}&term=${marker.title}`,\n      headers: {\n        Authorization: api\n      }\n    });\n\n  getReviews = id =>\n    $.ajax({\n      url: proxy + `https://api.yelp.com/v3/businesses/${id}/reviews`,\n      headers: {\n        Authorization: api\n      }\n    });\n\n  // Control marker behavior and info window when clicked\n  toggleInfoWindow = marker => {\n    const markers = [...this.state.markers];\n    marker = markers.filter(m => m.id === marker.id)[0];\n    marker.showInfo = !marker.showInfo;\n    marker.animation = marker.showInfo && google ? google.maps.Animation.BOUNCE : null;\n    this.setState({markers});\n  };\n\n  // Filter markers based on search query\n  filterLocations = (event, query) => {\n    event.preventDefault();\n    const markers = [...this.state.markers];\n    markers.map(marker => {\n      // Marker drops if it becomes visible\n      if (!marker.isVisible && google)\n        marker.animation = google.maps.Animation.DROP; // Take a chance to drop before filtering\n      // Case-insensitive filter\n      marker.isVisible = marker.title.toLowerCase().includes(query.toLowerCase());\n      if (!marker.isVisible) {\n        marker.showInfo = false; // Don't show info window if marker is invisible\n        marker.animation = null; // Filter unsuccessful, remain null\n      }\n      return marker;\n    });\n\n    this.setState({markers});\n  };\n\n  render() {\n    const {isScriptLoadSucceed} = this.props; // Checks whether Google Maps has loaded\n    const {markers, willLoad} = this.state;\n    // Apply focus to all markers\n    const mapElements = [...document.querySelectorAll('.gmnoprint')].slice(0, markers.length);\n    mapElements.map(element => element.tabIndex = 0);\n\n    // Placeholder when map doesn't appear\n    const placeholder = willLoad ? (\n      <p className=\"loading\">Loading...</p>\n    ) : (\n      <h1 className=\"error-message google\" tabIndex={0}>Error! Google Maps was unable to load.</h1>\n    );\n\n    return (\n      <div className=\"App\">\n        <ListView markers={markers} onToggleInfoWindow={this.toggleInfoWindow}\n          onFilterLocations={this.filterLocations}/>\n        {isScriptLoadSucceed ? (\n          <NeighborhoodMap markers={markers} onToggleInfoWindow={this.toggleInfoWindow}/>\n        ) : (\n          placeholder\n        )}\n      </div>\n    );\n  }\n}\n\nexport default scriptLoader(\n  'https://maps.googleapis.com/maps/api/js?key=AIzaSyAgW5OHRMNIfawf6DfY_UpnK1MqtJyN87E&v=3'\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}